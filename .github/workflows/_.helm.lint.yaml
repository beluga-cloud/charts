---
name: Lint OCI image (container)
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      chart:
        description: Path to the chart to build
        required: true
        type: string

env:
  ASDF_DIR: /home/runner/.asdf
  HELM_CONFIG_HOME: ${{ github.workspace }}/test/e2e/~helm

jobs:
  chart-testing:
    name: Lint chart ${{ inputs.chart }}
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.9'
          check-latest: true
      - uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1

      - name: Run chart-testing (lint)
        run: ct lint --charts ${{ inputs.chart }}

  validations:
    name: Check if all files are up-to-date (${{ inputs.chart }})
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/cache/restore@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        id: restore-asdf
        with:
          path: ${{ env.ASDF_DIR }}
          key: asdf-vm-${{ hashFiles('.tool-versions') }}
      - uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3.0.2
        with:
          skip_install: ${{ steps.restore-asdf.outputs.cache-hit == 'true' }}

      - name: Build helm dependencies
        run: helm dependencies build
        working-directory: ${{ github.workspace }}/${{ inputs.chart }}

      - name: Build out the charts/ directory with all depending files
        run: just build-external
        working-directory: ${{ github.workspace }}/${{ inputs.chart }}

      - uses: tj-actions/verify-changed-files@d774a4c7ebe335445d79c7b44138f56a76058ba0 # v19
        id: get-diff-values
        continue-on-error: true
        with:
          files: |
            ${{ inputs.chart }}/values.yaml
      - name: Assert that values.yaml is up-to-date
        if: steps.get-diff-values.outputs.files_changed == 'true'
        run: |
          # shellcheck disable=SC2016
          echo '::error file=${{ inputs.chart }}/values.yaml,line=1,title=values.yml not up-to-date::${{ inputs.chart }}/values.yaml must be updated. Please run `just build-external` to update it.'

      - uses: tj-actions/verify-changed-files@d774a4c7ebe335445d79c7b44138f56a76058ba0 # v19
        id: get-diff-readme
        continue-on-error: true
        with:
          files: |
            ${{ inputs.chart }}/README.md
      - name: Assert that README.md is up-to-date
        if: steps.get-diff-readme.outputs.files_changed == 'true'
        run: |
          # shellcheck disable=SC2016
          echo '::error file=${{ inputs.chart }}/README.md,line=1,title=README.md not up-to-date::${{ inputs.chart }}/README.md must be updated. Please run `just build-external` to update it.'

      - uses: tj-actions/verify-changed-files@d774a4c7ebe335445d79c7b44138f56a76058ba0 # v19
        id: get-diff-validation
        continue-on-error: true
        with:
          files: |
            ${{ inputs.chart }}/~develop/validation/*
      - name: Assert that validation/ is up-to-date
        if: steps.get-diff-validation.outputs.files_changed == 'true'
        run: |
          # shellcheck disable=SC2016
          echo '::error title=validation/ not up-to-date::${{ inputs.chart }}/~develop/validation must be updated. Please run `just build-external` to update it.'

      - name: Exit if a file is not up-to-date
        if: steps.get-diff-values.outputs.files_changed == 'true' || steps.get-diff-readme.outputs.files_changed == 'true' || steps.get-diff-validation.outputs.files_changed == 'true'
        run: exit 1

  vulnerability:
    name: Check for vulnerabilities (${{ inputs.chart }})
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # 0.17.0
        with:
          format: sarif
          hide-progress: false
          output: trivy-results.sarif
          scan-ref: ${{ inputs.chart }}
          scan-type: config
      - uses: github/codeql-action/upload-sarif@9a866ed4524fc3422c3af1e446dab8efa3503411 # codeql-bundle-20230418
        with:
          category: trivy-helm-syntax
          sarif_file: trivy-results.sarif

      # NOTE: fail the build only if vulnerabilities with severity HIGH or CRITICAL are found
      - uses: aquasecurity/trivy-action@84384bd6e777ef152729993b8145ea352e9dd3ef # 0.17.0
        with:
          exit-code: '1'
          format: table
          hide-progress: false
          scan-ref: ${{ inputs.chart }}
          scan-type: config
          severity: HIGH,CRITICAL
