---
name: Release updated charts (helm)
on:  # yamllint disable-line rule:truthy
  push:
    branches: [main]
    paths:
      # NOTE: only a few changes should trigger this pipeline
      - charts/*/templates/**
      - charts/*/Chart.lock
      - charts/*/Chart.yaml
      - charts/*/README.md
      - charts/*/values.yaml

env:
  HELM_CONFIG_HOME: ${{ github.workspace }}/test/e2e/~helm

jobs:
  release:
    name: Release Helm charts
    permissions:
      contents: write
      pages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
      - uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
          version: v3.10.0

      - name: Prepare GPG environment for Helm
        id: import-gpg
        run: |
          GNUPG_DIR="$(mktemp --directory --tmpdir=${{ runner.temp }})"
          
          # Import GPG passphrase
          echo '${{ secrets.HELM_SIGN_KEY_PASSPHRASE }}' > "${GNUPG_DIR}/passphrase"
          echo "passphrase-file=${GNUPG_DIR}/passphrase" >> "${GITHUB_OUTPUT}"
          
          # Import GPG signing key
          echo '${{ secrets.HELM_SIGN_KEY }}' | gpg --dearmor > "${GNUPG_DIR}/secring.gpg"
          echo "keyring=${GNUPG_DIR}/secring.gpg" >> "${GITHUB_OUTPUT}"
          
          # Export signing key name
          (
            echo -n "name="
            gpg --with-colons --import-options show-only --import "${GNUPG_DIR}/secring.gpg" \
            | grep uid \
            | cut -d':' -f10
          ) >> "${GITHUB_OUTPUT}"

      - name: Configure git user
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - uses: helm/chart-releaser-action@2504907988836d2ecfbc69eb18d4418d157c8401
        env:
          CR_GENERATE_RELEASE_NOTES: 'false'
          CR_KEY: ${{ steps.import-gpg.outputs.name }}
          CR_KEYRING: ${{ steps.import-gpg.outputs.keyring }}
          CR_PAGES_BRANCH: gh-helm
          CR_PASSPHRASE_FILE: ${{ steps.import-gpg.outputs.passphrase-file }}
          CR_SIGN: 'true'
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          skip_existing: true

  list-changed-charts:
    name: List all new/updated charts
    permissions:
      contents: read
    uses: ./.github/workflows/_.helm.list-changed.yaml

  vulnerability:
    name: Check for vulnerabilities (${{ matrix.chart }})
    needs: [list-changed-charts]
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        chart: ${{ fromJson(needs.list-changed-charts.outputs.charts) }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: aquasecurity/trivy-action@fbd16365eb88e12433951383f5e99bd901fc618f # 0.12.0
        with:
          exit-code: '1'
          format: sarif
          hide-progress: false
          output: trivy-results.sarif
          scan-ref: ${{ matrix.chart }}
          scan-type: config
      - uses: github/codeql-action/upload-sarif@1f63aba6538de592cd34d1d957c965c1167673c2 # codeql-bundle-20230418
        if: always()
        with:
          category: trivy-helm-syntax
          sarif_file: trivy-results.sarif
