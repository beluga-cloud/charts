apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  {{- with .Values.podAnnotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- with .Values.global.commonLabels }}{{ toYaml . | nindent 4 }}{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- include "common.labels.matchLabels" . | nindent 6 }}
    {{- with .Values.podLabels }}{{ toYaml . | nindent 6 }}{{ end }}
  {{- with .Values.strategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}{{ toYaml . | nindent 8 }}{{ end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: sonarr
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: {{ include "common.images.image" (dict "image" .Values.images.sonarr "context" $) }}
          imagePullPolicy: {{ .Values.images.sonarr.pullPolicy }}
          ports:
            - name: web
              containerPort: 8989
              protocol: TCP
          livenessProbe:
            httpGet: &httpProbe
              port: web
              path: /ping
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet: *httpProbe
            periodSeconds: 10
            timeoutSeconds: 10
          resources: {{- toYaml .Values.resources.sonarr | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /opt/sonarr/data
            {{- range .Values.sonarr.mediaVolumes }}
            - name: {{ .name }}
              mountPath: /media/{{ .name }}
              {{- if hasKey . "readOnly" }}
              readOnly: {{ .readOnly }}
              {{- else }}
              readOnly: true
              {{- end }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" . }}-data
          {{- else }}
          emptyDir: { }
          {{- end }}
        {{- range .Values.sonarr.mediaVolumes }}
        - name: {{ .name }}
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" $ }}-mediavol-{{ .name }}
        {{- end }}
