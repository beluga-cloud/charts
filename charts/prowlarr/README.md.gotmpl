{{- define "chart.title" }}{{ .Name | replace "-" " " | title }}{{- end }}
{{- define "chart.icon" }}https://raw.githubusercontent.com/Prowlarr/Prowlarr/develop/Logo/1024.png{{- end }}
{{- define "parameter.description" }}{{ regexReplaceAll "(https?://)([^/]+(?:/[^/]+)?)([^\\s]+)" (.Description | default .AutoDescription) "[$2]($1$2$3)" }}{{- end }}

<!-- markdownlint-disable MD033 -->

<h1 align="center">
  <a href="{{ template "chart.homepage" . }}">
    <img src="{{ template "chart.icon" . }}" alt="Logo" style="max-height: 150px">
  </a>
</h1>

<h4 align="center">{{ template "chart.title" . }} - {{ template "chart.description" . }}</h4>

<div align="center">
  <br/>

  [![License](https://img.shields.io/github/license/beluga-cloud/charts?logo=git&logoColor=white&logoWidth=20)](LICENSE)
  <br/>
  {{ template "chart.typeBadge" . }}
  {{ template "chart.versionBadge" . }}
  {{ template "chart.appVersionBadge" . }}

</div>

---

## [{{ template "chart.title" . }}]({{ template "chart.homepage" . }})

> _Disclaimer: This application has been developed by **prowlarr community**._

Prowlarr is an indexer manager/proxy built on the popular *arr .net/reactjs base stack to integrate with your various
PVR apps. Prowlarr supports management of both Torrent Trackers and Usenet Indexers. It integrates seamlessly with
Lidarr, Mylar3, Radarr, Readarr, and Sonarr offering complete management of your indexers with no per app Indexer setup
required (we do it all).

### Major Features Include

- Usenet support for 24 indexers natively, including Headphones VIP
- Usenet support for any Newznab compatible indexer via "Generic Newznab"
- Torrent support for over 500 trackers with more added all the time
- Torrent support for any Torznab compatible tracker via "Generic Torznab"
- Support for custom YML definitions via Cardigann that includes JSON and XML parsing
- Indexer Sync to Lidarr/Mylar3/Radarr/Readarr/Sonarr, so no manual configuration of the other applications are required
- Indexer history and statistics
- Manual searching of Trackers & Indexers at a category level
- Parameter based manual searching
- Support for pushing multiple releases at once directly to your download clients from Prowlarr
- Indexer health and status notifications
- Per Indexer proxy support (SOCKS4, SOCKS5, HTTP, Flaresolverr)

[> More about {{ template "chart.title" . }}]({{ template "chart.homepage" . }})

---

## TL;DR

```shell
helm repo add beluga-cloud https://beluga-cloud.github.io/charts
helm install my-release beluga-cloud/{{ template "chart.name" . }}
```

## Introduction

This chart bootstraps a {{ template "chart.title" . }} deployment on a [Kubernetes](kubernetes.io) cluster using the [Helm](helm.sh) package manager.

## Prerequisites

- Kubernetes {{ template "chart.kubeVersion" . }}
- Helm 3+

## Installing the Chart

To install the chart with the release name `my-release`:

```shell
helm repo add beluga-cloud https://beluga-cloud.github.io/charts
helm install my-release beluga-cloud/{{ template "chart.name" . }}
```

These commands deploy {{ template "chart.name" . }} on the Kubernetes cluster in the default configuration.
The Parameters section lists the parameters that can be configured during installation.

> **Tip:** List all releases using `helm list`

## Uninstalling the Chart

To uninstall/delete the `my-release` deployment:

```shell
helm delete my-release
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

## Parameters
{{- $params := list }}

### Global parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if hasPrefix "global." .Key }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` |  {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### Common parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "commonAnnotations" .Key)
        (hasPrefix "commonLabels" .Key)
        (hasPrefix "fullnameOverride" .Key)
        (hasPrefix "nameOverride" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### {{ template "chart.title" . }} parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "image" .Key)
        (hasPrefix ($.Name | snakecase) .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### Security parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "podSecurityContext" .Key)
        (hasPrefix "containerSecurityContext" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### Deployment/Statefulset parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "affinity" .Key)
        (hasPrefix "container" .Key)
        (hasPrefix "deployment" .Key)
        (hasPrefix "nodeSelector" .Key)
        (hasPrefix "pod" .Key)
        (hasPrefix "priorityClassName" .Key)
        (hasPrefix "provisioning" .Key)
        (hasPrefix "replicaCount" .Key)
        (hasPrefix "resources" .Key)
        (hasPrefix "statefulset" .Key)
        (hasPrefix "strategy" .Key)
        (hasPrefix "tolerations" .Key)
        (hasPrefix "topologySpreadConstraints" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### Network parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "service" .Key)
        (hasPrefix "ingress" .Key)
        (hasPrefix "networkPolicy" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### Persistence parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "persistence" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

### RBAC parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if and
      (not (has .Key $params))
      (or
        (hasPrefix "rbac" .Key)
      )
    }}
        {{- $params = append $params .Key }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}

{{- if not (eq (len .Values) (len $params)) }}
### Other parameters

| Key | Description | Default |
|-----|-------------|---------|
{{- range .Values }}
    {{- if not (has .Key $params) }}
| `{{ .Key }}` | {{ template "parameter.description" . }} | {{ if .Default }}{{ .Default }}{{ else }}{{ .AutoDefault }}{{ end }} |
    {{- end }}
{{- end }}
{{- end }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,

```shell
helm install my-release --set fullnameOverride=my-{{ template "chart.name" . }} beluga-cloud/{{ template "chart.name" . }}
```

Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,

```shell
helm install my-release -f values.yaml my-repo/{{ template "chart.name" . }}
```

> **Tip:** You can use the default values.yaml

## License

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
the License. You may obtain a copy of the License at

```
http://www.apache.org/licenses/LICENSE-2.0
```

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
language governing permissions and limitations under the License.

{{ template "helm-docs.versionFooter" . }}
