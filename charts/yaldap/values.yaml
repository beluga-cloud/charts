# yaml-language-server: $schema=values.schema.json

# Default values for helm-dashboard
global:
  # -- Labels to apply to all resources.
  commonLabels: {}
  # -- Enable global debug mode
  debug: false
  # -- Reference to one or more secrets to be used when pulling images
  #    ([kubernetes.io/docs](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/))
  imagePullSecrets: []
  # -- Global Docker image registry
  imageRegistry: ""

# -- String to partially override `common.names.fullname` template (will maintain the release name)
nameOverride: ""
# -- String to fully override `common.names.fullname` template
fullnameOverride: ""

images:
  yaldap:
    # -- helm-dashboard image registry (optional)
    registry: ""
    # -- helm-dashboard image repository
    repository: ghcr.io/beluga-cloud/yaldap/yaldap
    # -- helm-dashboard image tag (immutable tags are recommended)
    tag: ""
    # -- helm-dashboard image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    digest: ""
    # -- helm-dashboard image pull policy
    pullPolicy: IfNotPresent

# -- Additional annotations to apply to the pod.
podAnnotations: {}

# -- Additional labels to be added to pods
podLabels: {}

# -- Number of pods per zone. (_**It's not recommended to add more instance of helm-dashboard**_)
replicaCount: 1

# -- Set up update strategy for helm-dashboard installation. Set to `Recreate` if you use persistent volume
#    that cannot be mounted by more than one pods to make sure the pods is destroyed first.
#    ([kubernetes.io/docs](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy))
strategy: {}
# example:
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 25%

# -- Node labels for pod assignment
nodeSelector:
  kubernetes.io/os: linux

# expects input structure as per specification
# -- Affinity for pod assignment ([kubernetes.io/docs](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#affinity-v1-core))
affinity: {}
# example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master

# -- Tolerations for pod assignment ([kubernetes.io/docs](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#toleration-v1-core))
tolerations: []
# example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule

# -- Topology Spread Constraints for pod assignment
#    ([kubernetes.io/docs](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#topologyspreadconstraint-v1-core))
topologySpreadConstraints: []
# example:
#   topologySpreadConstraints:
#   - maxSkew: 2
#     topologyKey: topology.kubernetes.io/zone
#     whenUnsatisfiable: ScheduleAnyway
#     labelSelector:
#       matchLabels:
#         app.kubernetes.io/instance: helm-dashboard
#         app.kubernetes.io/component: dashboard

resources:
  # -- The requested resources for the container
  requests:
    cpu: 200m
    memory: 256Mi
  # -- The resources limits for the container
  limits:
    cpu: 1
    memory: 1Gi

# -- Security context for the pod ([kubernetes.io/docs](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/))
podSecurityContext:
  fsGroup: 65463
  runAsNonRoot: true
  runAsUser: 65463
  runAsGroup: 65463
  seccompProfile:
    type: RuntimeDefault

# -- Security context for the helm-dashboard container
#    ([kubernetes.io/docs](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/))
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsUser: 65463
  runAsGroup: 65463
  runAsNonRoot: true

persistence:
  data:
    # -- Enable data persistence using `PVC`. If false, use emptyDir
    enabled: true
    # -- Claims that pods are allowed to reference (see
    #    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#persistentvolumeclaim-v1-core
    #    for structural reference)
    volumeClaimSpec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100M

rbac:
  # -- Specifies whether RBAC resources should be created
  create: true
  # -- Allow helm-dashboard to create/edit/delete Kubernetes resources
  allowWriteActions: false

service:
  # -- Service type
  type: ClusterIP
  # -- Service Cluster IP
  clusterIP: ""
  # -- Addresses that are allowed when service is `LoadBalancer`
  loadBalancerSourceRanges: []
  # -- Enable client source IP preservation
  externalTrafficPolicy: Cluster
  # -- Additional annotations for the Service
  annotations: {}

  web:
    # -- `web` service port
    port: 8080
    # -- Specify the nodePort value for the `LoadBalancer` and `NodePort` service types
    nodePort: 0

ingress:
  # -- Enable ingress resource
  enabled: false
  # -- IngressClass that will be used to implement the Ingress
  ingressClassName: ""
  # -- Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  annotations: {}
  # -- Default host for the ingress resource
  hostname: yaldap.local
  # -- The Path to helm-dashboard. You may need to set this to '/*' in order to use this with ALB ingress controllers.
  path: /
  # -- Ingress path type
  pathType: ImplementationSpecific
  # -- Enable TLS configuration for the hostname defined at apiIngress.hostname parameter
  tls: false
  # -- The list of additional hostnames to be covered with this ingress record.
  extraHosts: []
  # -- Any additional paths that may need to be added to the ingress under the main host
  extraPaths: []
  # -- The tls configuration for additional hostnames to be covered with this ingress record.
  extraTls: []
  # -- Additional rules to be covered with this ingress record
  extraRules: []

networkPolicy:
  # -- Enable the default NetworkPolicy policy
  enabled: false
  # -- Don't require client label for connections
  allowExternal: true
  # -- Whether to allow all outbound traffic by default.
  allowAllOutbound: true
  # -- Sets ingress policy block. See [NetworkPolicy](https://kubernetes.io/docs/concepts/services-networking/network-policies/) documentation.
  ingress: []
  # -- Sets egress policy block. See [NetworkPolicy](https://kubernetes.io/docs/concepts/services-networking/network-policies/) documentation.
  egress: []

yaldap:
  # Custom configuration for yaldap
